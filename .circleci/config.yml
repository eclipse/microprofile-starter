version: 2.1
executors:
  maven-builder:
    machine: true
  docker-publisher:
    environment:
      IMAGE_NAME: microprofile/start.microprofile.io
    docker:
    - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: maven-builder
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "pom.xml" }}
        - v1-dependencies-
    - run:
        name: Gitter Notification
        command: |
          curl -X POST -i -H "Content-Type: application/json" -H "Accept: application/json" -H "Authorization: Bearer $GITTER_TOKEN" \
          "https://api.gitter.im/v1/rooms/$GITTER_ROOM_ID/chatMessages" -d \
          "{\"text\":\"Automatic message: Hello, new [build]($CIRCLE_BUILD_URL) has started.\"}"
    - run: if [[ ! -d ${HOME}/jdk-11.0.9+11 ]];then wget https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.9%2B11/OpenJDK11U-jdk_x64_linux_hotspot_11.0.9_11.tar.gz;fi;
    - run: if [[ ! -d ${HOME}/jdk-11.0.9+11 ]];then tar -xvf OpenJDK11U-jdk_x64_linux_hotspot_11.0.9_11.tar.gz -C ${HOME}/;fi;
    - run: if [[ ! -d ${HOME}/apache-maven-3.6.3 ]];then wget https://archive.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz;fi;
    - run: if [[ ! -d ${HOME}/apache-maven-3.6.3 ]];then tar -xvf apache-maven-3.6.3-bin.tar.gz -C ${HOME}/;fi;
    - run:
         name: build-fetch
         command: |
           export PATH=${HOME}/apache-maven-3.6.3/bin:${HOME}/jdk-11.0.9+11/bin:${PATH}; \
           export JAVA_HOME=${HOME}/jdk-11.0.9+11/; \
           mvn -Dhttps.protocols=TLSv1,TLSv1.1,TLSv1.2 dependency:go-offline -Pthorntail -Dskip.integration.tests=false
    - save_cache:
        paths:
        - ${HOME}/.m2
        - ${HOME}/apache-maven-3.6.3
        - ${HOME}/jdk-11.0.9+11
        key: v1-dependencies-{{ checksum "pom.xml" }}
    - run:
        name: package-tests
        no_output_timeout: 120000
        command: |
           export PATH=${HOME}/apache-maven-3.6.3/bin:${HOME}/jdk-11.0.9+11/bin:${PATH}; \
           export JAVA_HOME=${HOME}/jdk-11.0.9+11/; \
           export WLP_JAR_EXTRACT_DIR=${HOME}; \
           mvn -Dhttps.protocols=TLSv1,TLSv1.1,TLSv1.2 clean package -Pthorntail -Dskip.integration.tests=false -DSTARTER_TS_WORKSPACE=/dev/shm/
    - persist_to_workspace:
        root: .
        paths:
        - ./target/mp-starter-hollow-thorntail.jar
        - ./target/mp-starter.war
        - ./Container

  docker-build:
    executor: docker-publisher
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker
    - run:
        name: Prepare files for Docker build
        command: |
          cp /tmp/workspace/Container . -R && cp /tmp/workspace/target . -R && unzip target/mp-starter-hollow-thorntail.jar -d target/mp-starter-hollow-thorntail
    - run:
        name: Build Docker image
        command: |
          docker build -f Container/Dockerfile -t $IMAGE_NAME:master .
    - run:
        name: Archive built Docker image
        command: docker save -o image.tar $IMAGE_NAME
    - persist_to_workspace:
        root: .
        paths:
        - ./image.tar

  publish-master:
    executor: docker-publisher
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker
    - run:
        name: Load archived Docker image
        command: docker load -i /tmp/workspace/image.tar
    - run:
        name: Publish Docker Image to Docker Hub
        command: |
          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker push $IMAGE_NAME:master

  deploy:
    machine:
      enabled: true
    steps:
    - add_ssh_keys:
        fingerprints:
        - "75:12:72:e1:19:f8:2d:8f:eb:ed:88:87:6c:c2:66:28"
    - run:
        name: Restart Compose
        command: |
          ssh $SSH_USER@$SSH_HOST "sudo systemctl restart docker-compose@test-start.microprofile.io"
    - run:
        name: Gitter Notification
        command: |
          curl -X POST -i -H "Content-Type: application/json" -H "Accept: application/json" -H "Authorization: Bearer $GITTER_TOKEN" \
          "https://api.gitter.im/v1/rooms/$GITTER_ROOM_ID/chatMessages" -d \
          "{\"text\":\"Automatic message: Hello, new [build]($CIRCLE_BUILD_URL) is live on https://test-start.microprofile.io/\"}"

workflows:
  build-master:
    jobs:
    - build:
        filters:
          branches:
            only: master
    - docker-build:
        requires:
          - build
        filters:
          branches:
            only: master
    - publish-master:
        requires:
          - docker-build
        filters:
          branches:
            only: master
    - deploy:
        requires:
          - publish-master
        filters:
          branches:
            only: master
