name: Tests

on:
  push:
    paths-ignore:
     - 'Container/**'
     - '.circleci/**'
     - 'CONTRIBUTING.md'
     - 'LICENSE'
     - 'README.md'
     - 'commands.txt'
     - 'gencerts.sh'
     - 'how-to.md'
     - 'releasing.md'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
     - 'Container/**'
     - '.circleci/**'
     - 'CONTRIBUTING.md'
     - 'LICENSE'
     - 'README.md'
     - 'commands.txt'
     - 'gencerts.sh'
     - 'how-to.md'
     - 'releasing.md'

env:
  LANG: en_US.UTF-8
  GRADLE_USER_HOME: ~/.gradle

jobs:
  run-units:
    name: API MicroProfile Starter
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          check-latest: true
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: 3.6.3
      - name: Build and run tests for Starter
        run: |
          mvn --version
          java --version
          mvn clean verify -Pthorntail -Dtest=APITest -DSTARTER_TS_WORKSPACE=$RUNNER_TEMP
      - name: Prepare failure archive (if maven failed)
        if: failure()
        shell: bash
        run: find . -type d -name '*-reports' -o -name "*.log" | tar -czf test-reports-apitest.tgz -T -
      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-reports-apitest
          path: 'test-reports-apitest.tgz'
  run-starter:
    name: ${{ matrix.runtime }} MicroProfile Starter
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        runtime: [ 'helidon',
                   'kumuluzee',
                   'liberty',
                   'payara',
                   'quarkus',
                   'thorntail',
                   'tomee',
                   'wildfly' ]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-${{ matrix.runtime }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.runtime }}-maven-
    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-${{ matrix.runtime }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.runtime }}-gradle-
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
        check-latest: true
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.2
      with:
        maven-version: 3.6.3
    - name: Build and run tests for Starter
      run: |
        mvn --version
        java --version
        mvn clean verify -Pthorntail -Dtest=TestMatrixTest#${{ matrix.runtime }}* -DSTARTER_TS_WORKSPACE=$RUNNER_TEMP
    - name: Prepare failure archive (if maven failed)
      if: failure()
      shell: bash
      run: find . -type d -name '*-reports' -o -name "*.log" | tar -czf test-reports-${{ matrix.runtime }}.tgz -T -
    - name: Upload failure Archive (if maven failed)
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: test-reports-${{ matrix.runtime }}
        path: 'test-reports-${{ matrix.runtime }}.tgz'
