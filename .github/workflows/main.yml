name: Tests

on:
  push:
    paths-ignore:
     - 'Container/**'
     - '.circleci/**'
     - 'CONTRIBUTING.md'
     - 'LICENSE'
     - 'README.md'
     - 'commands.txt'
     - 'gencerts.sh'
     - 'how-to.md'
     - 'releasing.md'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
     - 'Container/**'
     - '.circleci/**'
     - 'CONTRIBUTING.md'
     - 'LICENSE'
     - 'README.md'
     - 'commands.txt'
     - 'gencerts.sh'
     - 'how-to.md'
     - 'releasing.md'

env:
  LANG: en_US.UTF-8
  GRADLE_USER_HOME: ~/.gradle

jobs:
  run-units:
    name: API and WEB smoke test - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, windows-2019 ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          check-latest: true
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: 3.6.3
      - name: Build and run tests for Starter
        if: startsWith(matrix.os, 'windows')
        run: |
          cmd /C mvn --version
          cmd /C mvnw.cmd --version
          cmd /C java --version
          copy Container\settings.xml ~\.m2\settings.xml
          cmd /C  mvnw.cmd clean verify -Dtest=APIITCase -DSTARTER_TS_WORKSPACE=%RUNNER_TEMP%
        shell: cmd
      - name: Build and run tests for Starter
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          mvn --version
          ./mvnw --version
          java --version
          mkdir -p  ~/.m2/
          cp ./Container/settings.xml ~/.m2/settings.xml
          ./mvnw clean verify -Dtest=APIITCase -DSTARTER_TS_WORKSPACE=$RUNNER_TEMP
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports-apitest-${{ matrix.os }}
          path: |
            target/surefire-reports
  run-starter:
    name: ${{ matrix.runtime }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        runtime: [ 'helidon',
                   'kumuluzee',
                   'liberty',
                   'payara',
                   'quarkus',
                   'thorntail',
                   'tomee',
                   'wildfly' ]
        os: [ ubuntu-20.04, windows-2019 ]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-${{ matrix.runtime }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.runtime }}-maven-
    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-${{ matrix.runtime }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.runtime }}-gradle-
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
        check-latest: true
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.2
      with:
        maven-version: 3.6.3
    - name: Build and run tests for Starter
      if: startsWith(matrix.os, 'windows')
      # We run only a subset of tests on Windows, the "All" (all examples selected variant)
      # Due to notorious instabilities in file locking in ~/.m2 on GitHub Actions runners.
      # It might take some of the server's processes to release those locks.
      run: |
        cmd /C mvn --version
        cmd /C mvnw.cmd --version
        cmd /C java --version
        copy Container\settings.xml ~\.m2\settings.xml
        cmd /C mvnw.cmd clean verify -Dtest=TestMatrixITCase#${{ matrix.runtime }}All -DSTARTER_TS_WORKSPACE=%RUNNER_TEMP%
      shell: cmd
    - name: Build and run tests for Starter
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        mvn --version
        ./mvnw --version
        java --version
        mkdir -p  ~/.m2/
        cp ./Container/settings.xml ~/.m2/settings.xml
        ./mvnw clean verify -Dtest=TestMatrixITCase#${{ matrix.runtime }}* -DSTARTER_TS_WORKSPACE=$RUNNER_TEMP
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-reports-${{ matrix.runtime }}-${{ matrix.os }}
        path: |
          target/surefire-reports
          target/archived-logs
